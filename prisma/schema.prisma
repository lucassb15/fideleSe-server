// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Password {
  hash String
  salt String
}

model Company {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  email      String   @unique
  name       String
  address    String?
  password   Password
  logo       String   @default("path/to/placeholder/image")
  cards      companyCard[]
  ads        Ad[]
  stats      Stat[]
  employeeId String?  @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  email      String   @unique
  name       String
  password   Password
  cards      userCard[]
  stats      Stat[]
  isEmployee Boolean  @default(false)
  companyId  String?  @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model companyCard {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  company       Company    @relation(fields: [companyId], references: [id])
  companyId     String     @db.ObjectId
  userCards     userCard[]
  name          String
  maxPoints     Int
  image         String     @default("path/to/placeholder/image")
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model userCard {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  customer      User        @relation(fields: [customerId], references: [id])
  customerId    String      @db.ObjectId
  companyCard   companyCard @relation(fields: [companyCardId], references: [id])
  companyCardId String      @db.ObjectId
  currentPoints Int         @default(0)
  xCompleted    Int         @default(0)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Ad {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String   @db.ObjectId
  image     String   @default("path/to/placeholder/image")
  priority  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Stat {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  customer   User     @relation(fields: [customerId], references: [id])
  customerId String   @db.ObjectId
  company    Company  @relation(fields: [companyId], references: [id])
  companyId  String   @db.ObjectId
  date       DateTime
}
